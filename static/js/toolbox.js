const closeAllAccounts = () => {
    $.ajax({
        url: '/close-all-sandbox-accounts',
        type: 'GET',
        success: (response) => {
            console.log('–£—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —É–¥–∞–ª–µ–Ω—ã', response);
            alert('–í—Å–µ —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.');
        },
        error: (error) => {
            console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.');
        }
    });
}

const openAccount = () => {
    $.ajax({
        url: '/open-sandbox-account',
        type: 'GET',
        success: (response) => {
            console.log('–ê–∫–∫–∞—É–Ω—Ç –æ—Ç–∫—Ä—ã—Ç', response);
            alert('–ê–∫–∫–∞—É–Ω—Ç –æ—Ç–∫—Ä—ã—Ç.');
        },
        error: (error) => {
            console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ.');
        }
    });
}

const addMoney = () => {
    $.ajax({
        url: '/add-money',
        type: 'GET',
        success: (response) => {
            console.log('–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω', response);
            alert('–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω.');
            window.location = '/';
        },
        error: (error) => {
            console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞.');
        }
    });
}

const getTariff = () => {
    return new Promise((resolve, reject) => {
        $.ajax({
            url: '/info',
            type: 'GET',
            success: (response) => {
                console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞', response);
                const tariff = response.tariff;
                resolve(tariff);
            },
            error: (error) => {
                console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', error);
                reject('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
            }
        });
    });
}


const getAccounts = () => {
    return new Promise((resolve, reject) => {
        $.ajax({
            url: '/accounts',
            type: 'GET',
            success: (response) => {
                console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞', response);
                const accounts = response.accounts;
                resolve(accounts);
            },
            error: (error) => {
                console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏', error);
                reject('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
            }
        });
    });
}

const updateExchangeTimer = () => {
    const now = new Date();
    const openingTime = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 9, 0, 0); // 9:00 —É—Ç—Ä–∞
    const closingTime = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 18, 0, 0); // 17:00 –≤–µ—á–µ—Ä–∞

    let targetTime;
    let messagePrefix;

    if (now < openingTime) {
        targetTime = openingTime;
        messagePrefix = "–î–æ –æ—Ç–∫—Ä—ã—Ç–∏—è: ";
    } else if (now >= openingTime && now < closingTime) {
        targetTime = closingTime;
        messagePrefix = "–î–æ –∑–∞–∫—Ä—ã—Ç–∏—è: ";
    } else {
        $('#exchange-timer').text("–ë–∏—Ä–∂–∞ –∑–∞–∫—Ä—ã—Ç–∞.");
        return; // –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –±–∏—Ä–∂–∞ –∑–∞–∫—Ä—ã—Ç–∞
    }

    const diff = targetTime - now;
    const hours = Math.floor(diff / (1000 * 60 * 60));
    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((diff % (1000 * 60)) / 1000);

    $('#exchange-timer').text(`${messagePrefix}${hours}:${minutes}:${seconds}`);
}


$(document).ready(function () {
    updateExchangeTimer();
    setInterval(updateExchangeTimer, 1000); // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    $('#delete-acc').on('click', closeAllAccounts);
    $('#open-acc').on('click', openAccount);
    $('#add-money').on('click', addMoney);
    getTariff().then(tariff => {
        $('#tariff').text(tariff.toUpperCase());
        sendMessage("ü§ñ –ó–∞–ø—É—â–µ–Ω –±–æ—Ç-—Ç–æ—Ä–≥–æ–≤–µ—Ü, —Ç–∞—Ä–∏—Ñ: " + tariff.toUpperCase());
    });
    getAccounts().then(accounts => {
        const acc = JSON.parse(accounts[0]);
        console.log('üèõ –ê–∫–∫–∞—É–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω:', acc);
        sendMessage("üèõ –ó–∞–≥—Ä—É–∂–µ–Ω –∞–∫–∫–∞—É–Ω—Ç: " + acc.id);
    }).catch(error => {
        console.error('üë∫ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞:', error);
        sendMessage('üë∫ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞:', error);
    });
});